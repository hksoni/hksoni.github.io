---
---

@string{aps = {American Physical Society,}}

@inproceedings{10.1145/3387514.3405872,
  author = {Soni, Hardik and Rifai, Myriana and Kumar, Praveen and Doenges, Ryan and Foster, Nate},
  title = {Composing Dataplane Programs with μP4},
  year = {2020},
  isbn = {9781450379557},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3387514.3405872},
  doi = {10.1145/3387514.3405872},
  abstract = {Dataplane languages like P4 enable flexible and efficient packet-processing using domain-specific primitives such as programmable parsers and match-action tables. Unfortunately, P4 programs tend to be monolithic and tightly coupled to the hardware architecture, which makes it hard to write programs in a portable and modular way---e.g., by composing reusable libraries of standard protocols.To address this challenge, we present the design and implementation of a novel framework (μP4) comprising a lightweight logical architecture that abstracts away from the structure of the underlying hardware pipelines and naturally supports powerful forms of program composition. Using examples, we show how enables modular programming. We present a prototype of the compiler that generates code for multiple lower-level architectures, including Barefoot's Tofino Native Architecture. We evaluate the overheads induced by our compiler on realistic examples.},
  booktitle = {Proceedings of the Annual Conference of the ACM Special Interest Group on Data Communication, SIGCOMM '20},
  pages = {329–343},
  numpages = {15},
  keywords = {Composition, Programmable dataplanes, Modularity, P4},
  location = {Virtual Event, USA},
  series = {SIGCOMM '20}
}

@phdthesis{soni:tel-01867973,
  TITLE = {{Towards network softwarization : a modular approach for network control delegation}},
  AUTHOR = {Soni, Hardik},
  URL = {https://tel.archives-ouvertes.fr/tel-01867973},
  NUMBER = {2018AZUR4026},
  SCHOOL = {{Universit{\'e} C{\^o}te d'Azur}},
  YEAR = {2018},
  MONTH = Apr,
  KEYWORDS = {Network softwarization ; SDN ; NFV ; Multicast ; Data plane programming ; Modular data plane ; P4 ; Network program composition ; R{\'e}seaux programmables ; SDN ; NFV ; Multicast ; Plan de donn{\'e}es modulaire ; P4 ; Composition du programme r{\'e}seau},
  TYPE = {PhD. Thesis},
  PDF = {https://tel.archives-ouvertes.fr/tel-01867973/file/2018AZUR4026.pdf},
  HAL_ID = {tel-01867973},
  HAL_VERSION = {v2},
}


@techreport{soni:hal-01632431,
  TITLE = {{P4Bricks: Enabling multiprocessing using Linker-based network data plane architecture}},
  AUTHOR = {Soni, Hardik and Turletti, Thierry and Dabbous, Walid},
  publisher = {HAL-Inria},
  NOTE = {working paper or preprint},
  YEAR = {2018},
  MONTH = Feb,
  abstract = {Packet-level programming languages such as P4 usually require to
    describe all packet processing functionalities for a given programmable
      network device within a single program. However, this approach monopolizes
      the device by a single large network application program, which prevents
      possible addition of new functionalities by other independently written
      network applications. We propose P4Bricks, a system which aims to deploy
      and execute multiple independently developed and compiled P4 programs on
      the same reconfigurable hardware device. P4Bricks is based on a Linker
      component that merges the programmable parsers/deparsers and restructures
      the logical pipeline of P4 programs by refactoring, decomposing and
      scheduling the pipelines’ tables. It merges P4 programs according to packet
      processing semantics (parallel or sequential) specified by the network
      operator and runs the programs on the stages of the same hardware pipeline,
      thereby enabling multiprocessing. This paper presents the initial design of
      our system with an ongoing implementation and studies P4 language’s
      fundamental constructs facilitating merging of independently written
      programs.},
  URL = {https://hal.inria.fr/hal-01632431},
  PDF = {p4bricks-inria-tech.pdf},
  Code = {https://github.com/hksoni/p4bricks.git},
  HAL_ID = {hal-01632431},
  HAL_VERSION = {v2}
}

@article{10.1109/TNSM.2017.2759167,
  author = {Soni, Hardik and Dabbous, Walid and Turletti, Thierry and Asaeda, Hitoshi},
  title = {NFV-Based Scalable Guaranteed-Bandwidth Multicast Service for Software Defined ISP Networks},
  year = {2017},
  issue_date = {December 2017},
  publisher = {IEEE Press},
  volume = {14},
  number = {4},
  issn = {1932-4537},
  url = {https://doi.org/10.1109/TNSM.2017.2759167},
  doi = {10.1109/TNSM.2017.2759167},
  abstract = {New applications where anyone can broadcast high quality video are becoming very popular. Internet services providers (ISPs) may take the opportunity to propose new high quality multicast services to their clients. Because of its centralized control plane, software defined networking (SDN) enables the deployment of such a service in a flexible and bandwidth-efficient way. But deploying large-scale multicast services on SDN requires smart group membership management and a bandwidth reservation mechanism with QoS guarantees that should neither waste bandwidth nor impact too severely best effort traffic. In this paper, we propose: 1) a scalable multicast group management mechanism based on a network function virtualization approach for software defined ISP networks to implement and deploy multicast services on the network edge and 2) the lazy load balancing multicast (L2BM) routing algorithm for sharing the core network capacity in a friendly way between guaranteed-bandwidth multicast traffic and best-effort traffic and that does not require costly real-time monitoring of link utilization. We have implemented the mechanism and algorithm, and evaluated them both in a simulator and a testbed. In the testbed, we experimented the group management at the edge and L2BM in the core with an open vSwitch-based QoS framework and evaluated the performance of L2BM with an exhaustive set of experiments on various realistic scenarios. The results show that L2BM outperforms other state-of-the art algorithms by being less aggressive with best-effort traffic and accepting about 5%–15% more guaranteed-bandwidth multicast join requests.},
  journal = {IEEE Transactions on Network and Service Management},
  month = dec,
  pages = {1157–1170},
  numpages = {14},
  pdf={nfv-based-scalable-tnsm.pdf},
  code={https://team.inria.fr/diana/software/l2bm/}
}

@INPROCEEDINGS{7996652,  
  author={H. {Soni} and W. {Dabbous} and T. {Turletti} and H. {Asaeda}},  
  booktitle={2017 IEEE International Conference on Communications (ICC)},   
  title={Scalable guaranteed-bandwidth multicast service in software defined ISP networks},
  year={2017}, 
  volume={},
  number={}, 
  pages={1-7},  
  abstract={New applications where anyone can broadcast video are becoming very popular on smartphones. With the advent of high definition video, ISP providers may take the opportunity to propose new high quality broadcast services to their clients. Because of its centralized control plane, Software Defined Networking (SDN) seems an ideal way to deploy such a service in a flexible and bandwidth-efficient way. But deploying large scale multicast services on SDN requires smart group membership management and a bandwidth reservation mechanism to support QoS guarantees that should neither waste bandwidth nor impact too severely best effort traffic. In this paper, we propose a Network Function Virtualization based solution for Software Defined ISP networks to implement scalable multicast group management. Then, we propose the Lazy Load balancing Multicast (L2BM) routing algorithm for sharing the network capacity in a friendly way between guaranteed-bandwidth multicast traffic and best-effort traffic. Our implementation of the framework made on Floodlight controllers and Open vSwitches is used to study the performance of L2BM.},  
  doi={10.1109/ICC.2017.7996652},  
  ISSN={1938-1883},  
  month={May},
  pdf={icc-l2bm.pdf},
  code={https://team.inria.fr/diana/software/l2bm/}
}

